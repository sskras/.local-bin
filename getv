#! /usr/bin/env sh

# SPDX-License-Identifier: BlueOak-1.0.0
# SPDX-FileCopyrightText: 2025 Saulius Krasuckas <saulius2_at_ar-fi_point_lt> | sskras

# Get videos from the internet.

# List scheduled recordings by default:
if [ "$1" = "" ]; then
    atq -o %F\ %T | sort -Vk 2,3
    exit
fi

# Record using default setting if the only argument is `.`:
if [ "$*" = "." ]; then
    set -- ""
fi

     Channel=${1:-lrt}
  Start_time=${2:-now}
    Duration=${3:-60m}

[ $# -le 3 ] && Done_args=$# || Done_args=3
shift ${Done_args}

      Tracks="hls-audio1-ORG+hls-audio1-LIT+hls-3"
Audio_tracks="hls-audio1-ORG+hls-audio1-LIT"
      Output="%(title)s [%(id)s].%(ext)s"
Audio_output="%(title)s [%(id)s]-audio.%(ext)s"
  Start_date=$(date --date "${Start_time}" +%Y-%m-%d)
  Start_time=$(date --date "${Start_time}" +%H:%M)
        Name=${*:-[YEAR] ORIG (ENG; LITH)}
        Name=$(echo ${Name} | tr ' {}' '-()')
 Chan_suffix=$(echo ${Channel} | tr '[:lower:]' '[:upper:]')

gen_log_fnames ()
{
    # Make sure the suffix (currently 'Au') is not longer than ${Chan_suffix}
    # in ${Audio_log}, so ${Log} is always the max length of the two:

         Log=${Name}-FHD.${Start_date}-${Start_time}-${Chan_suffix}.log
   Audio_log=${Name}-FHD.${Start_date}-${Start_time}-Au.log
Log_name_len=${#Log}
}

gen_log_fnames

if [ "${Log_name_len}" -gt 255 ]; then
    echo
    echo "Longest generated file name of the log exceeds the common limit of 255 chars:"
    echo
    echo "${Log}"
    echo
    echo "Its' length is ${Log_name_len}."

    # UTF-8 Ellipsis symbol occupies 3 additional bytes:
    Chars_to_truncate=$(( ${Log_name_len} - 255 + 3 ))
    Ellipsis_UTF8='\u2026'
    # Via: https://stackoverflow.com/questions/27652458/whats-the-best-way-to-embed-a-unicode-character-in-a-posix-shell-script/27658989#27658989

    New_len=$(( ${#Name} - ${Chars_to_truncate} ))
    Name=$(env printf '%.*s'${Ellipsis_UTF8} ${New_len} "${Name}" | iconv -c)
    # Via: https://stackoverflow.com/questions/63430979/how-can-i-truncate-a-line-of-text-longer-than-a-given-length/63431166#63431166
    # Via: https://stackoverflow.com/questions/18700455/string-trimming-using-linux-cut-respecting-utf8-bondaries/18719951#18719951

    echo
    echo "  TODO: Save previous fnames into .txt or something"
    echo

    echo "Fixing:"

    gen_log_fnames

    echo
    echo "${Log}"
    echo "${Audio_log}"
    echo
    echo "Their length are ${#Log} and ${#Audio_log}."
fi

# Get the actual duration:

if ! expr "${Duration}" : " *[0-9]\+m *"; then
    Starting_secs=$(date -d "${Start_time}" +%s)
    Finishing_secs=$(date -d "${Duration}" +%s)

    if [ $Finishing_secs -lt $Starting_secs ]; then
        Finishing_secs=$(date -d "${Duration} ${Starting_date} tomorrow" +%s)
    fi
    Duration=$(( ($Finishing_secs - $Starting_secs) / 60 ))m
fi

sched_dump ()
{
	if [ "$1" = "--audio-only" ]; then
	    Tracks=${Audio_tracks}
	    Output=${Audio_output}
	       Log=${Audio_log}
	fi
	cd
	at "${Start_time} ${Start_date}" <<- \
	-----------------------------
	(
	  date
	  pwd
	  timeout -s SIGINT         \
	    ${Duration}             \
	    yt-dlp                  \
	      --audio-multistreams  \
	      -f "${Tracks}"        \
	      -o "${Output}"        \
	      ${Url}                \
	
	) \
	> "${Log}" 2>&1
	-----------------------------
}

case $Channel in

  (lrt)
    Url="https://www.lrt.lt/mediateka/tiesiogiai/lrt-televizija"
    sched_dump
    ;;

  (lrt+)
    Url="https://www.lrt.lt/mediateka/tiesiogiai/lrt-plius"
    sched_dump
    # Also launch a secondary dump that would capture audio only.
    # It is to help in cases where full-featured capture gets its' audio lost.
    #
    # And this way (by having secondary, audio-only dump happenig in parallel),
    # it seems to help the full-featured capture to not lose the audio
    # (at least never in the several months long run).
    sched_dump --audio-only
    ;;

  (*)
    Url="TODO://unknown-channel"
    echo "Implement Url for '${Channel}' channel: ${Url}"
    exit 1
    ;;
esac


echo "Using some defaults:"

# TODO Via:
#
# $ diff -u <(at -c 727 | tail -3 | fmt -u) <(at -c 728 | tail -3 | fmt -u) | colordiff
# --- /dev/fd/63  2025-04-13 16:14:49.596014294 +0300
# +++ /dev/fd/62  2025-04-13 16:14:49.596014294 +0300
# @@ -1,5 +1,5 @@
#    timeout -s SIGINT 60m yt-dlp --audio-multistreams -f
# -  "hls-audio1-ORG+hls-audio1-LIT+hls-3" -o "%(title)s [%(id)s].%(ext)s"
# +  "hls-audio1-ORG+hls-audio1-LIT" -o "%(title)s [%(id)s]-audio.%(ext)s"
#    https://www.lrt.lt/mediateka/tiesiogiai/lrt-plius
# -) > "[YEAR]-ORIG-(ENG;-LITH)-16:12:16-FHD.2025-04-13-LRT+.log" 2>&1
# +) > "[YEAR]-ORIG-(ENG;-LITH)-16:12:16-FHD.2025-04-13-LRT+audio.log" 2>&1
# 
